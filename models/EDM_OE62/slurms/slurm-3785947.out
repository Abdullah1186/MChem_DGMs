/var/spool/slurmd/job3785947/slurm_script: line 11: module: command not found
/var/spool/slurmd/job3785947/slurm_script: line 12: module: command not found
/var/spool/slurmd/job3785947/slurm_script: line 13: module: command not found
/users/afekaiki/EDM/myenv/lib/python3.8/site-packages/numpy/core/fromnumeric.py:43: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  result = getattr(asarray(obj), method)(*args, **kwds)
/users/afekaiki/EDM/e3_diffusion_for_molecules/eval_analyze.py:156: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  flow_state_dict = torch.load(join(eval_args.model_path, fn), map_location=device)
Not importing rdkit functions.
Namespace(aggregation_method='sum', attention=True, augment_noise=0, batch_size=64, break_train_epoch=False, clip_grad=True, condition_time=True, conditioning=[], context_node_nf=0, cuda=True, current_epoch=4036, data_augmentation=False, dataset='oe62', dequantization='argmax_variational', device=device(type='cuda'), diffusion_loss_type='l2', diffusion_noise_precision=1e-05, diffusion_noise_schedule='polynomial_2', diffusion_steps=1000, dp=True, ema_decay=0.9999, exp_name='edm_oe62_resume', filter_molecule_size=None, filter_n_atoms=None, generate_epochs=1, include_charges=False, inv_sublayers=1, lr=0.0001, model='egnn_dynamics', n_epochs=10000, n_layers=4, n_report_steps=50, n_stability_samples=500, nf=256, no_cuda=False, no_wandb=False, norm_constant=1, normalization_factor=1.0, normalize_factors=[1, 4, 10], num_workers=0, ode_regularization=0.001, online=True, probabilistic_model='diffusion', remove_h=False, resume='/users/afekaiki/EDM/outputs/edm_oe62_resume', save_model=True, sequential=False, sin_embedding=False, start_epoch=3691, tanh=True, test_epochs=15, trace='hutch', visualize_every_batch=10000, wandb_usr=None)
Entropy of n_nodes: H[N] -4.140960693359375
alphas2 [9.99990000e-01 9.99988000e-01 9.99982000e-01 ... 2.59676966e-05
 1.39959211e-05 1.00039959e-05]
gamma [-11.51291546 -11.33059532 -10.92513058 ...  10.55863126  11.17673063
  11.51251595]
	 100/4000 Molecules generated at 8.13 secs/sample
	 200/4000 Molecules generated at 8.12 secs/sample
	 300/4000 Molecules generated at 8.12 secs/sample
	 400/4000 Molecules generated at 8.12 secs/sample
	 500/4000 Molecules generated at 8.12 secs/sample
	 600/4000 Molecules generated at 8.12 secs/sample
	 700/4000 Molecules generated at 8.12 secs/sample
	 800/4000 Molecules generated at 8.12 secs/sample
	 900/4000 Molecules generated at 8.12 secs/sample
	 1000/4000 Molecules generated at 8.12 secs/sample
	 1100/4000 Molecules generated at 8.12 secs/sample
	 1200/4000 Molecules generated at 8.12 secs/sample
	 1300/4000 Molecules generated at 8.12 secs/sample
	 1400/4000 Molecules generated at 8.12 secs/sample
	 1500/4000 Molecules generated at 8.12 secs/sample
	 1600/4000 Molecules generated at 8.12 secs/sample
	 1700/4000 Molecules generated at 8.12 secs/sample
	 1800/4000 Molecules generated at 8.12 secs/sample
	 1900/4000 Molecules generated at 8.12 secs/sample
	 2000/4000 Molecules generated at 8.12 secs/sample
	 2100/4000 Molecules generated at 8.12 secs/sample
	 2200/4000 Molecules generated at 8.12 secs/sample
	 2300/4000 Molecules generated at 8.12 secs/sample
	 2400/4000 Molecules generated at 8.12 secs/sample
	 2500/4000 Molecules generated at 8.12 secs/sample
	 2600/4000 Molecules generated at 8.12 secs/sample
	 2700/4000 Molecules generated at 8.12 secs/sample
	 2800/4000 Molecules generated at 8.12 secs/sample
	 2900/4000 Molecules generated at 8.12 secs/sample
	 3000/4000 Molecules generated at 8.12 secs/sample
	 3100/4000 Molecules generated at 8.12 secs/sample
	 3200/4000 Molecules generated at 8.12 secs/sample
	 3300/4000 Molecules generated at 8.12 secs/sample
	 3400/4000 Molecules generated at 8.12 secs/sample
	 3500/4000 Molecules generated at 8.12 secs/sample
	 3600/4000 Molecules generated at 8.12 secs/sample
	 3700/4000 Molecules generated at 8.12 secs/sample
	 3800/4000 Molecules generated at 8.12 secs/sample
	 3900/4000 Molecules generated at 8.12 secs/sample
	 4000/4000 Molecules generated at 8.12 secs/sample
{'mol_stable': 0.02425, 'atm_stable': 0.8296391258506661}
Install rdkit roolkit to obtain Validity, Uniqueness, Novelty
 Val NLL 	, iter: 0/97, NLL: -29.33
 Val NLL 	, iter: 50/97, NLL: -122.33
Final val nll -147.63970303954284
 Test NLL 	, iter: 0/97, NLL: 160.80
 Test NLL 	, iter: 50/97, NLL: -71.28
Final test nll -124.6423604713296
Overview: val nll -147.63970303954284 test nll -124.6423604713296 {'mol_stable': 0.02425, 'atm_stable': 0.8296391258506661}
